const Marked = require('./Marked.js');
const React = require('react');

class BlogPost extends React.Component {
  renderContent() {
    let content = this.props.content;
    if (this.props.truncate) {
      content = content.split('<!--truncate-->')[0];
      return React.createElement(
        'article',
        { className: 'post-content' },
        React.createElement(
          Marked,
          null,
          content
        ),
        React.createElement(
          'div',
          { className: 'read-more' },
          React.createElement(
            'a',
            { className: 'button', href: this.props.config.baseUrl + 'blog/' + this.props.post.path },
            'Read More'
          )
        )
      );
    }
    return React.createElement(
      Marked,
      null,
      content
    );
  }

  renderAuthorPhoto() {
    const post = this.props.post;
    if (post.authorFBID) {
      return React.createElement(
        'div',
        { className: 'authorPhoto' },
        React.createElement(
          'a',
          { href: post.authorURL, target: '_blank' },
          React.createElement('img', {
            src: 'https://graph.facebook.com/' + post.authorFBID + '/picture/?height=200&width=200'
          })
        )
      );
    } else {
      return null;
    }
  }

  renderTitle() {
    const post = this.props.post;
    return React.createElement(
      'h1',
      null,
      React.createElement(
        'a',
        { href: this.props.config.baseUrl + 'blog/' + post.path },
        post.title
      )
    );
  }

  renderPostHeader() {
    const post = this.props.post;
    const match = post.path.match(/([0-9]+)\/([0-9]+)\/([0-9]+)/);
    // Because JavaScript sucks at date handling :(
    const year = match[1];
    const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][parseInt(match[2], 10) - 1];
    const day = parseInt(match[3], 10);

    return React.createElement(
      'header',
      { className: 'postHeader' },
      this.renderAuthorPhoto(),
      React.createElement(
        'p',
        { className: 'post-authorName' },
        React.createElement(
          'a',
          { href: post.authorURL, target: '_blank' },
          post.author
        )
      ),
      this.renderTitle(),
      React.createElement(
        'p',
        { className: 'post-meta' },
        month,
        ' ',
        day,
        ', ',
        year
      )
    );
  }

  render() {
    return React.createElement(
      'div',
      { className: 'post' },
      this.renderPostHeader(),
      this.renderContent()
    );
  }
}

module.exports = BlogPost;