const BlogPost = require('./BlogPost.js');
const BlogSidebar = require('./BlogSidebar.js');
const Container = require('./Container.js');
const MetadataBlog = require('./MetadataBlog.js');
const React = require('react');
const Site = require('./Site.js');

const BlogPageLayout = React.createClass({
  displayName: 'BlogPageLayout',

  getPageURL(page) {
    let url = this.props.config.baseUrl + 'blog/';
    if (page > 0) {
      url += 'page' + (page + 1) + '/';
    }
    return url + '#content';
  },

  render() {
    const perPage = this.props.metadata.perPage;
    const page = this.props.metadata.page;
    return React.createElement(
      Site,
      { section: 'blog', title: 'Blog', language: 'en', config: this.props.config },
      React.createElement(
        'div',
        { className: 'docMainWrapper wrapper' },
        React.createElement(BlogSidebar, { language: this.props.language, config: this.props.config }),
        React.createElement(
          Container,
          { className: 'mainContainer documentContainer postContainer blogContainer' },
          React.createElement(
            'div',
            { className: 'posts' },
            MetadataBlog.slice(page * perPage, (page + 1) * perPage).map(post => {
              return React.createElement(BlogPost, {
                post: post,
                content: post.content,
                truncate: true,
                key: post.path + post.title,
                config: this.props.config
              });
            }),
            React.createElement(
              'div',
              { className: 'docs-prevnext' },
              page > 0 && React.createElement(
                'a',
                { className: 'docs-prev', href: this.getPageURL(page - 1) },
                '\u2190 Prev'
              ),
              MetadataBlog.length > (page + 1) * perPage && React.createElement(
                'a',
                { className: 'docs-next', href: this.getPageURL(page + 1) },
                'Next \u2192'
              )
            )
          )
        )
      )
    );
  }
});

module.exports = BlogPageLayout;